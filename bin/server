#!/bin/sh

# cd to root path
cd "$(dirname "$0")/.." || exit;

# Loads .env
# shellcheck disable=2039 disable=1091
source "./.env"

cluster_name=$(bin/terraform output cluster_name)
service_name=$(bin/terraform output service_name)

main() {
  if [ "$1" = "start" ]; then
    start
  elif [ "$1" = "stop" ]; then
    stop
  else
    help
  fi
}

help() {
  echo "Use: $0 <start|stop>"
}

# Groups the logic to start the service
start() {
  # Scale the service up to get a task running
  aws ecs update-service --cluster "$cluster_name" --service "$service_name" \
    --desired-count 1 > /dev/null

  # Poll ECS to get the running task ARN
  while [ "$task" = "" ]; do
    task=$(aws ecs list-tasks --cluster "$cluster_name" \
      --service-name "$service_name" | jq -r '.taskArns[]')

    test "$task" = "" && sleep 6
  done

  # Poll ECS until the task is up & running
  aws ecs wait tasks-running --cluster "$cluster_name" --tasks "$task"

  # Describe the running task
  network_interface=$(aws ecs describe-tasks --cluster "$cluster_name" \
    --tasks "$task" | jq -r '.tasks[].attachments[] | 
      select(.type == "ElasticNetworkInterface")
      .details[] | select(.name == "networkInterfaceId") .value')

  # Get the IP address from this network interface
  public_ip=$(aws ec2 describe-network-interfaces  \
    --filters Name=network-interface-id,Values="$network_interface" | \
    jq -r '.NetworkInterfaces[].Association.PublicIp')

  echo "Server started successfully"
  echo "Public IP address: $public_ip"
}

stop() {
  # Scale down so we stop the service
  aws ecs update-service --cluster "$cluster_name" --service "$service_name" \
    --desired-count 0 > /dev/null

  echo "Server is being stopped"
}

# Run main
main "$@"
